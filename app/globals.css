/* app/globals.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --primary: 221.2 83.2% 53.3%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --accent: 210 40% 96.1%;
  --accent-foreground: 222.2 47.4% 11.2%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 221.2 83.2% 53.3%;
  --radius: 0.5rem;
}

.dark {
  --background: 0 0% 0%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --popover: 222.2 84% 4.9%;
  --popover-foreground: 210 40% 98%;
  --primary: 217.2 91.2% 59.8%;
  --primary-foreground: 222.2 47.4% 11.2%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 0 0% 15%;
  --input: 217.2 32.6% 17.5%;
  --ring: 224.3 76.3% 48%;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
  .bg-background {
    background-color: hsl(var(--background));
  }
}

/* Terminal isolation - prevent global theme inheritance while preserving xterm functionality */
.xterm {
  /* Create a new stacking context to isolate from global styles */
  position: relative;
  z-index: 1;
  /* Don't inherit global text color - let xterm set its own defaults */
  color: unset;
  /* Ensure proper box model */
  box-sizing: border-box;
}

/* Reset any potential interference but don't force inheritance */
.xterm * {
  /* Reset box model to prevent layout issues */
  box-sizing: border-box;
}

/* Allow xterm to handle text selection properly */
.xterm .xterm-selection {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}

/* Notebook specific styles - separate from app theme */
/* NOTE: notebook-container should be inside .notebook-theme for variable access */
.notebook-theme .notebook-container {
  background-color: var(--notebook-bg) !important;
  color: #ffffff !important;
  height: 100vh;
  overflow-y: auto;
}

/* Scrollbar styling for xterm only */
.xterm ::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.xterm ::-webkit-scrollbar-track {
  background: #2e2e2e;
}

.xterm ::-webkit-scrollbar-thumb {
  background-color: #555;
  border-radius: 4px;
  border: 2px solid #2e2e2e;
}

.xterm ::-webkit-scrollbar-thumb:hover {
  background-color: #777;
}

.xterm {
  height: 100%;
  /* Ensure proper text selection */
  user-select: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

.xterm-viewport {
  overflow-y: auto;
  overflow-x: hidden;
  height: 100% !important;
}

/* Ensure text selection works properly in xterm */
.xterm .xterm-selection {
  background-color: rgba(255, 255, 255, 0.3) !important;
  pointer-events: none;
}

/* Make sure xterm text is selectable */
.xterm .xterm-rows {
  user-select: text;
  -webkit-user-select: text;
}

/* Preserve ANSI color formatting in selection */
.xterm .xterm-char-measure-element {
  visibility: hidden;
  position: absolute;
  top: 0;
  left: -9999px;
}

button[aria-selected="true"] {
  background-color:  #111827 !important; /* Tailwind's blue-600 */
  color: #FFFFFF !important; /* White text */
}

/* Remove conflicting hover styles for selected button */
button[aria-selected="true"]:hover {
  background-color:  #1f2c49; 
  color: #FFFFFF !important;
}

/* globals.css */

.selected-file {
  background-color: rgb(37 99 235); /* bg-blue-600 */
  color: white; /* text-white */
}

/* Define notebook theme colors - separate from app theme */
.notebook-theme {
  /* =================== NOTEBOOK THEME SCOPED VARIABLES =================== */
  /* Main notebook area background */
  --notebook-bg: #7bbd26;
  
  /* Default node colors */
  --notebook-node-bg: #ff0000;           /* Default node background - RED FOR TESTING */
  --notebook-node-header-bg: #00ff00;    /* Default node header background - GREEN FOR TESTING */
  --notebook-node-content-bg: #0000ff;   /* Default node content area background - BLUE FOR TESTING */
  
  /* Operation node colors */
  --notebook-operation-bg: #ffff00;      /* Operation node background - YELLOW FOR TESTING */
  --notebook-operation-header-bg: #ff00ff; /* Operation header background - MAGENTA FOR TESTING */
  --notebook-operation-content-bg: #00ffff; /* Operation content background - CYAN FOR TESTING */
  
  /* Monaco editor colors */
  --notebook-monaco-bg: #ffffff;         /* Monaco editor background - WHITE FOR TESTING */
  --notebook-monaco-margin-bg: #808080;  /* Monaco line numbers margin - GRAY FOR TESTING */
  
  /* UI component colors (shared across node types) */
  --notebook-input-bg: #f0f0f0;          /* Input boxes background */
  --notebook-input-border: #cccccc;      /* Input boxes border */
  --notebook-input-text: #000000;        /* Input boxes text */
  --notebook-button-bg: #d0d0d0;         /* Button background */
  --notebook-button-border: #aaaaaa;     /* Button border */
  --notebook-button-text: #000000;       /* Button text */
  --notebook-button-hover-bg: #c0c0c0;   /* Button hover background */
  
  /* Operation type dropdown - special isolation */
  --notebook-operation-type-dropdown-bg: #1e1e1e;  /* Operation type dropdown background */
  --notebook-operation-type-dropdown-border: #555555; /* Operation type dropdown border */
  --notebook-operation-type-dropdown-text: #ffffff; /* Operation type dropdown text */
  
  /* Interactive states */
  --notebook-hover-bg: #374151;
  --notebook-active-bg: #374151;

  /* Apply the main background */
  background-color: var(--notebook-bg) !important;
  /* Ensure it covers the whole notebook area */
  min-height: 100%;
  width: 100%;
  position: relative;
  z-index: 0;
}

/* Component specific styles - Default nodes only */

.notebook-theme .notebook-node[data-type="default"] {
  background-color: var(--notebook-node-bg) !important;
  border: 2px solid var(--notebook-node-border, #4b5563) !important;
  border-radius: 0.5rem;
  padding: 1rem;
  margin-bottom: 1rem;
  position: relative;
  z-index: 2;
  background-clip: padding-box;
}

/* Operation nodes use different colors */
.notebook-theme .notebook-node[data-type="operation"] {
  background-color: var(--notebook-operation-bg) !important;
  border: 2px solid var(--notebook-operation-border, #ff0040) !important;
  border-radius: 0.5rem;
  padding: 1rem;
  margin-bottom: 1rem;
  position: relative;
  z-index: 2;
  background-clip: padding-box;
}

/* Node header styling - Default nodes */
.notebook-theme .notebook-node:not([data-type="operation"]) .node-header {
  background-color: var(--notebook-node-header-bg) !important;
  border-radius: 0.375rem;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
}

/* Node header styling - Operation nodes */
.notebook-theme .notebook-node[data-type="operation"] .node-header {
  background-color: var(--notebook-operation-header-bg) !important;
  border-radius: 0.375rem;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
}

/* Node content styling - Default nodes */
.notebook-theme .notebook-node:not([data-type="operation"]) .node-content {
  background-color: var(--notebook-node-content-bg) !important;
  border-radius: 0.375rem;
  padding: 0.5rem;
}

/* Node content styling - Operation nodes */
.notebook-theme .notebook-node[data-type="operation"] .node-content {
  background-color: var(--notebook-operation-content-bg) !important;
  border-radius: 0.375rem;
  padding: 0.5rem;
}

.notebook-theme .notebook-node:hover {
  background-color: var(--notebook-hover-bg);
}

.notebook-node.dragging * {
  pointer-events: none;
}

/* Style for the drag target indicator */
[data-drag-target="true"]::before {
  content: '';
  position: absolute;
  left: -2px; /* Extend beyond borders */
  right: -2px;
  height: 3px; /* Thicker line */
  background-color: hsl(var(--primary));
  z-index: 1000; /* Highest z-index to overlay all elements */
  pointer-events: none; /* Prevent interference */
  border-radius: 2px; /* Rounded line */
  box-shadow: 0 0 4px rgba(0,0,0,0.2); /* Subtle shadow for depth */
}

/* Position indicator above or below based on drop position */
[data-drag-target="true"][data-drag-position="before"]::before {
  top: -1.5px;
}

[data-drag-target="true"][data-drag-position="after"]::before {
  bottom: -1.5px;
}

/* Ensure node content doesn't overlap */
.node-header,
.node-content {
  position: relative;
  z-index: 2;
}

/* Update DraggableList drag indicator if needed */
.drag-indicator {
  z-index: 50;
  pointer-events: none;
}

/* Monaco editor styling - separate for default and operation nodes */
.notebook-theme .notebook-node:not([data-type="operation"]) .monaco-editor,
.notebook-theme .notebook-node:not([data-type="operation"]) .monaco-editor-background,
.notebook-theme .notebook-node:not([data-type="operation"]) .monaco-editor .overflow-guard {
  background-color: var(--notebook-node-monaco-bg) !important;
}

.notebook-theme .notebook-node:not([data-type="operation"]) .monaco-editor .margin {
  background-color: var(--notebook-node-monaco-margin-bg) !important;
}

.notebook-theme .notebook-node[data-type="operation"] .monaco-editor,
.notebook-theme .notebook-node[data-type="operation"] .monaco-editor-background,
.notebook-theme .notebook-node[data-type="operation"] .monaco-editor .overflow-guard {
  background-color: var(--notebook-operation-monaco-bg) !important;
}

.notebook-theme .notebook-node[data-type="operation"] .monaco-editor .margin {
  background-color: var(--notebook-operation-monaco-margin-bg) !important;
}

/* UI components styling - separate for default and operation nodes */
.notebook-theme .notebook-node:not([data-type="operation"]) input,
.notebook-theme .notebook-node:not([data-type="operation"]) select,
.notebook-theme .notebook-node:not([data-type="operation"]) textarea {
  background-color: var(--notebook-node-input-bg) !important;
  border-color: var(--notebook-node-input-border) !important;
  color: var(--notebook-node-input-text) !important;
}

.notebook-theme .notebook-node:not([data-type="operation"]) button {
  background-color: var(--notebook-node-button-bg) !important;
  border-color: var(--notebook-node-button-border) !important;
  color: var(--notebook-node-button-text) !important;
}

.notebook-theme .notebook-node:not([data-type="operation"]) button:hover {
  background-color: var(--notebook-node-button-hover-bg) !important;
}

.notebook-theme .notebook-node[data-type="operation"] input,
.notebook-theme .notebook-node[data-type="operation"] select,
.notebook-theme .notebook-node[data-type="operation"] textarea {
  background-color: var(--notebook-operation-input-bg) !important;
  border-color: var(--notebook-operation-input-border) !important;
  color: var(--notebook-operation-input-text) !important;
}

.notebook-theme .notebook-node[data-type="operation"] button {
  background-color: var(--notebook-operation-button-bg) !important;
  border-color: var(--notebook-operation-button-border) !important;
  color: var(--notebook-operation-button-text) !important;
}

.notebook-theme .notebook-node[data-type="operation"] button:hover {
  background-color: var(--notebook-operation-button-hover-bg) !important;
}

/* Operation type dropdown special styling */
.notebook-theme [data-operation-type-selector="true"] .operation-type-dropdown,
.notebook-theme [data-operation-type-selector="true"] .operation-type-dropdown-menu {
  background-color: var(--notebook-operation-dropdown-bg) !important;
  border-color: var(--notebook-operation-dropdown-border) !important;
  color: var(--notebook-operation-dropdown-text) !important;
}

.operation-editor, 
.monaco-editor, 
.monaco-editor-background,
.monaco-editor .overflow-guard {
  background-color: var(--notebook-node-bg) !important;
}

/* Only apply special styling to Monaco editors within notebook context */
.notebook-theme .operation-editor .monaco-editor, 
.notebook-theme .operation-editor .monaco-editor-background,
.notebook-theme .operation-editor .monaco-editor .overflow-guard {
  background-color: var(--notebook-bg) !important;
}

/* Keep default Monaco editor styling for edit and diff modes */
.monaco-editor:not(.notebook-theme *),
.monaco-editor-background:not(.notebook-theme *),
.monaco-editor .overflow-guard:not(.notebook-theme *) {
  /* This will preserve default Monaco editor styling */
  background-color: inherit;
}

/* Override any inherited dark backgrounds - SCOPED TO NOTEBOOK ELEMENTS ONLY */
/* CRITICAL: Only apply to direct notebook elements, never to containers that might hold dialogs */
.notebook-theme .notebook-container {
  /* Only set background-color directly, not CSS variables that can leak */
  background-color: var(--notebook-bg) !important;
}

.notebook-theme .notebook-node,
.notebook-theme .notebook-operation {
  /* Only override background for notebook nodes/operations themselves */
  background-color: var(--notebook-bg) !important;
  /* Don't override CSS variables that dialogs might inherit */
}

.notebook-theme .notebook-header,
.notebook-theme .notebook-content {
  /* Only set specific background, not global CSS variables */
  background-color: var(--notebook-bg) !important;
}

/* Update monaco.css */

/* its main editor styling */
/* Default styling for all Monaco editors outside notebook */
.monaco-editor:not(.notebook-theme *),
.monaco-editor .overflow-guard:not(.notebook-theme *),
.monaco-editor-background:not(.notebook-theme *) {
  background-color: #202020 !important; /* black background */
}

/* its main editor styling */
/* Line numbers margin styling for main editors */
.monaco-editor:not(.notebook-theme *) .margin {
  background-color: #202020 !important; /* gray background */
}

/* Fix notebook specific Monaco editor styling */
.notebook-theme .operation-editor .monaco-editor,
.notebook-theme .operation-editor .monaco-editor-background,
.notebook-theme .operation-editor .monaco-editor .overflow-guard {
  background-color: var(--notebook-bg) !important;
}

/* Fix notebook editor line numbers margin to use node background */
.notebook-theme .operation-editor .monaco-editor .margin {
  background-color: var(--notebook-node-bg) !important;
}

/* Keep the rest of Monaco editor styles */
.monaco-editor {
  padding: 0 !important;
  border: none !important;
}

.monaco-editor .overflow-guard {
  border-radius: 0 !important;
}

.monaco-editor .monaco-scrollable-element {
  border-radius: 0 !important;
}

.monaco-editor .mtk1 {
  color: rgb(243, 244, 246) !important;
}

/* Rest of existing Monaco editor styles... */

/* Add to app/globals.css */

/* Make line numbers margin match node background */
.notebook-node .monaco-editor .margin,
.notebook-node .monaco-editor .monaco-editor-background {
  background-color: var(--notebook-node-bg) !important;
}

/* Also ensure operation editors have consistent styling */
.notebook-theme .node-content .monaco-editor .margin,
.notebook-theme .node-content .monaco-editor-background {
  background-color: var(--notebook-node-bg) !important;
}

/* Override any potential conflicting styles */
.monaco-editor .margin[role="presentation"] {
  background-color: inherit !important;
}

.notebook-theme .monaco-editor .margin {
  background-color: var(--notebook-node-bg) !important;
}

/* Custom scrollbar styling for notebook theme */
.notebook-theme::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.notebook-theme::-webkit-scrollbar-track {
  background: var(--notebook-bg);
}

.notebook-theme::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
  border: 2px solid var(--notebook-bg);
}

.notebook-theme::-webkit-scrollbar-thumb:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

/* Also apply to any scrollable containers within notebook */
.notebook-theme *::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.notebook-theme *::-webkit-scrollbar-track {
  background: var(--notebook-bg);
}

.notebook-theme *::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
  border: 2px solid var(--notebook-bg);
}

.notebook-theme *::-webkit-scrollbar-thumb:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

/* Hide borders and controls when focus mode is active */
.notebook-node.focus-mode {
  border: none;
}

.notebook-node.focus-mode .node-header,
.notebook-node.focus-mode .node-content {
  border: none;
}

.notebook-node.focus-mode .node-controls {
  opacity: 0;
  transition: opacity 0.2s;
}

/* Show border on hover */
.notebook-node.focus-mode:hover {
  border: 1px solid rgba(255, 255, 255, 0.15); /* Adjust border style as needed */
}

/* Show borders of node header and content on hover */
.notebook-node.focus-mode:hover .node-header,
.notebook-node.focus-mode:hover .node-content {
  border: none;
}

/* Show controls on hover */
.notebook-node.focus-mode:hover .node-controls {
  opacity: 1;
}

/* Update in globals.css */

/* Base focus mode styles */
.notebook-node.focus-mode {
  border-color: transparent;
  transition: border-color 0.2s;
}

.notebook-node.focus-mode .node-header,
.notebook-node.focus-mode .node-content {
  border-color: transparent;
  transition: border-color 0.2s;
}

.notebook-node.focus-mode .node-controls {
  opacity: 0;
  transition: opacity 0.2s;
}

/* Restore normal state on hover */
.notebook-node.focus-mode:hover {
  border-color: rgba(255, 255, 255, 0.15);
}

.notebook-node.focus-mode:hover .node-header,
.notebook-node.focus-mode:hover .node-content {
  border-color: rgba(255, 255, 255, 0.15);
}

.notebook-node.focus-mode:hover .node-controls {
  opacity: 1;
}

/* In globals.css - Update/add these rules */

/* Base node controls state */
.node-controls {
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* Show controls on node hover (non-focus mode) */
.notebook-node:hover .node-controls {
  opacity: 1;
}

/* Focus mode specific */
.notebook-node.focus-mode .node-controls {
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* Show controls on hover in focus mode */
.notebook-node.focus-mode:hover .node-controls {
  opacity: 1;
}

/* At the end of globals.css */
/* Editor visibility hierarchy */
.monaco-editor {
  isolation: isolate;
}

/* Git diff editor specific */
.git-diff-editor {
  position: relative;
  z-index: 10;
}

.git-diff-editor .monaco-editor,
.git-diff-editor .monaco-editor-background,
.git-diff-editor .monaco-scrollable-element {
  background-color: #1e1e1e !important; 
}

/* Interactive elements */
.monaco-editor .view-lines,
.monaco-editor .margin,
.monaco-editor .scrollbar {
  pointer-events: auto !important;
}

.notebook-node:last-child {
  margin-bottom: 1rem;
}

/* Add padding-bottom to the parent container */
.parent-container {
  padding-bottom: 1rem;
}

/* Ensure proper z-index stacking for notebook editors */
.notebook-node .node-content {
  position: relative;
  z-index: 1;
}

.notebook-node .monaco-editor {
  z-index: 2;
  position: relative;
}

/* Ensure editor container is properly positioned */
.notebook-monaco-editor {
  position: relative !important;
  width: 100% !important;
  min-height: 100px !important;
  display: block !important;
}

/* VSCode-like dark gray theme for file tree and left bar */
.dark .bg-background {
  background-color: var(--notebook-bg) !important;
}

.dark .border-r {
  border-color: hsl(var(--border)) !important;
}

.dark .bg-accent {
  background-color: #101010 !important;
}

.dark .hover\:bg-accent:hover {
  background-color: #101010 !important;
}

.dark .text-accent-foreground {
  color: #a0a0a0 !important;
}

.dark .text-muted-foreground {
  color: #4a4a4a !important;
}

.dark .bg-blue-600 {
  background-color: #141414 !important;
}

.dark .hover\:bg-blue-600:hover {
  background-color: #141414 !important;
}

/* Fix file tree alignment and text color */
.dark .file-tree-button {
  padding-left: 0 !important;
  text-align: left !important;
  justify-content: flex-start !important;
  font-size: 0.95rem !important;
}

.dark .file-tree-button i {
  margin-right: 0.5rem !important;
  width: 1rem !important;
  text-align: center !important;
}

.dark .file-tree-button span {
  color: #c0c0c0 !important;
}

/* Update hover and selected states */
.dark .file-tree-button:hover,
.dark .file-tree-button[aria-selected="true"] {
  background-color: #202020 !important;
}

.dark .file-tree-button:hover span,
.dark .file-tree-button[aria-selected="true"] span {
  color: #ffffff !important;
}

/* Ensure notebook styles are not affected by dark theme */
.dark .notebook-container,
.dark .notebook-theme {
  background-color: var(--notebook-bg) !important;
}

/* Custom hover style for node action buttons */
.notebook-node .node-action-button {
  transition: background-color 0.2s ease;
  background-color: var(--notebook-node-bg);
}



/* Ensure the icon inside the button doesn't have its own background */
.notebook-node .node-action-button svg {
  background-color: transparent !important;
}

/* Custom hover style for node action buttons */
.notebook-node .node-action-button:hover {
  background-color: rgba(255, 255, 255, 0.1) !important;
  color: white !important;
}



